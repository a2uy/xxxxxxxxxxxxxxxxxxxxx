name: Update Tapmad Playlist

on:
  schedule:
    - cron: '0 * * * *' # ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶ò‡¶®‡ßç‡¶ü‡¶æ‡¶Ø‡¶º ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞
  workflow_dispatch:

jobs:
  fetch-and-save:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: python -m pip install --upgrade pip requests

      - name: Fetch Tapmad playlist (anti-redirect)
        env:
          SOURCE_URL: ${{ secrets.TWO_URL }}
          OUTPUT_PATH: "tapmad_playlist.m3u"
        run: |
          python - <<'PY'
          import os, sys, requests, time
          from urllib.parse import urljoin

          src = os.environ.get("SOURCE_URL")
          out = os.environ.get("OUTPUT_PATH")

          if not src:
              print("‚ùå Missing SOURCE_URL (set ONE_URL secret)", file=sys.stderr)
              sys.exit(1)

          headers = {
              "User-Agent": "Dalvik/2.1.0 (Linux; U; Android 10; IPTV-Player)",
              "Accept": "*/*",
              "Connection": "keep-alive",
              "Referer": "https://tv.noobon.top/",
              "Origin": "https://tv.noobon.top",
          }

          session = requests.Session()
          session.headers.update(headers)

          def fetch(url):
              try:
                  r = session.get(url, timeout=40, allow_redirects=False)
                  # Handle Telegram redirect manually
                  if 300 <= r.status_code < 400 and "Location" in r.headers:
                      loc = r.headers["Location"]
                      print(f"üîÅ Redirected to: {loc}")
                      if loc.startswith("/"):
                          loc = urljoin(url, loc)
                      time.sleep(1)
                      return fetch(loc)
                  if "text/html" in r.headers.get("Content-Type", "") and "#EXTM3U" not in r.text:
                      print("‚ö†Ô∏è Got HTML page instead of playlist!")
                  return r
              except Exception as e:
                  print("‚ùå Request failed:", e)
                  sys.exit(1)

          r = fetch(src)
          data = r.content

          # Save binary-safe (works for utf8 or raw)
          with open(out, "wb") as f:
              f.write(data)

          print(f"‚úÖ Saved {len(data)} bytes to {out}")
          PY

      - name: Commit & push if changed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add tapmad_playlist.m3u
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "update: tapmad playlist (auto)"
            git push origin HEAD
          fi
